// Given an array A[] and a number x, check for pair in A[] with sum as x
// logic :
// 1) Sort the array in non - decreasing order.
// 2) Initialize two index variables to find the candidate
// elements in the sorted array.
//  (a)Initialize first to the leftmost index : l = 0
//  (b)Initialize second  the rightmost index : r = ar_size - 1
// 3) Loop while l < r.
//	 (a)If(A[l] + A[r] == sum)  then return 1
//	 (b)Else if (A[l] + A[r] <  sum)  then l++
//	 (c)Else r--
// 4) No candidates in whole array - return 0

#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

/* Diver function to test above function */
int main()
{
	vector<int> ar = { 1, 4, 45, 6, 10, -8 };
	sort(ar.begin(), ar.end());
	int sum = 16;
	bool isAvailable = false;
	size_t n = ar.size();
	size_t l = 0;
	size_t r = n-1;

	while (l < r)
	{
		if (ar[l] + ar[r] == sum)
		{
			isAvailable = true;
			break;
		}
		else if (ar[l] + ar[r] < sum)
		{
			l++;
		}
		else
		{
			r--;
		}
	}

	if (isAvailable)
	{
		printf("Yes pair exists in the array\n");
	}
	else
	{
		printf("No pair does not exists in the array\n");
	}
	return 0;
}
